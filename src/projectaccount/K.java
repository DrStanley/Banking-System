/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectaccount;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.List;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Stanley
 */
public class K extends javax.swing.JFrame {

    /**
     * Creates new form K
     */
    Connection con;
    ResultSet res;
    String rs;
    int curRow = 0;
    Statement Sobj;
    String passwd;
    long ball;
    int ids;

    public void ConnectionMth() {
        //   bal.setEnabled(false);

        try {
            print.setEnabled(false);
            text.setEnabled(false);
//            pre.setEnabled(false);
//            net.setEnabled(false);
            Menu1.setEnabled(false);
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/base1", "base1", "base1");
            Sobj = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            //String SQL= "select * from TABLE1";
            //res=Sobj.executeQuery(SQL);
            //res.next();  
        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());
        }
    }

    public void printComponent() {

        PrinterJob pj = PrinterJob.getPrinterJob();
        pj.setJobName(" Print Component ");

        pj.setPrintable(new Printable() {
            public int print(Graphics pg, PageFormat pf, int pageNum) {
                if (pageNum > 0) {
                    return Printable.NO_SUCH_PAGE;
                }
                String txt = text.getText();
                Graphics2D g2 = (Graphics2D) pg;
                g2.translate(pf.getImageableX(), pf.getImageableY());
                pp.paint(pg);
                pp.paint(g2);
                return Printable.PAGE_EXISTS;
            }
        });

        if (pj.printDialog() == false) {
            return;
        }

        try {
            pj.print();
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(K.this, ex.getMessage() + " + " + ex.getCause());
        }
    }

    public K() {
        initComponents();
        ConnectionMth();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem11 = new javax.swing.JMenuItem();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        main = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        check = new javax.swing.JButton();
        accnum = new javax.swing.JTextField();
        accpwd = new javax.swing.JPasswordField();
        back = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        print = new javax.swing.JButton();
        pp = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        text = new javax.swing.JEditorPane();
        menu = new javax.swing.JMenuBar();
        Menu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();

        jMenuItem11.setText("jMenuItem11");

        jScrollPane2.setViewportView(jTree1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(255, 0, 204));
        jLabel1.setFont(new java.awt.Font("Engravers MT", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(" STANZO BANK NIG. LTD");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Security Check", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 12), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel2.setText("Account Number");

        jLabel3.setText("Account Password");

        check.setText("Check");
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        accnum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                accnumKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(accnum, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                    .addComponent(accpwd))
                .addGap(108, 108, 108))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(accnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(accpwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel4.setText("For Specific month please goto OPTIONS");

        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        text.setEditable(false);
        jScrollPane1.setViewportView(text);

        javax.swing.GroupLayout ppLayout = new javax.swing.GroupLayout(pp);
        pp.setLayout(ppLayout);
        ppLayout.setHorizontalGroup(
            ppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ppLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        ppLayout.setVerticalGroup(
            ppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainLayout.createSequentialGroup()
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)))))
                .addGap(26, 26, 26))
            .addGroup(mainLayout.createSequentialGroup()
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(mainLayout.createSequentialGroup()
                .addComponent(pp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(pp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(print, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        Menu1.setText("Options");

        jMenuItem1.setText("All");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        Menu1.add(jMenuItem1);

        jMenuItem2.setText("January");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        Menu1.add(jMenuItem2);

        jMenuItem3.setText("Febuary");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        Menu1.add(jMenuItem3);

        jMenuItem4.setText("March");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        Menu1.add(jMenuItem4);

        jMenuItem5.setText("April");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        Menu1.add(jMenuItem5);

        jMenuItem6.setText("May");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        Menu1.add(jMenuItem6);

        jMenuItem7.setText("June");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        Menu1.add(jMenuItem7);

        jMenuItem8.setText("July");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        Menu1.add(jMenuItem8);

        jMenuItem9.setText("August");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        Menu1.add(jMenuItem9);

        jMenuItem12.setText("September");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        Menu1.add(jMenuItem12);

        jMenuItem13.setText("October");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        Menu1.add(jMenuItem13);

        jMenuItem14.setText("November");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        Menu1.add(jMenuItem14);

        jMenuItem10.setText("December");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        Menu1.add(jMenuItem10);

        menu.add(Menu1);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        String pass = accpwd.getText();
        String acn = accnum.getText();
        try {
            String SQL = "select * from TABLE1 where password='" + pass + "'";
            res = Sobj.executeQuery(SQL);
            res.next();
            String pasd = res.getString("password");
            if (acn.equals(res.getString("accnum"))) {
                JOptionPane.showMessageDialog(K.this, " Data Verified !!!");
                ids = res.getInt("id");
                text.setEnabled(true);
                print.setEnabled(true);
                check.setEnabled(false);
                Menu1.setEnabled(true);
                System.out.println(ids+"this is it");
                // String SQL = "select * from " + bank + " where accountnum='" + accnumber + "'";
                 String SQLi = "select * from descrip where identity_id=" + ids;
            res = Sobj.executeQuery(SQLi);
            int row = 0;
            System.out.println(row);
            String[] store = new String[10];
            store[row] = "";
            // store = new String[];
            System.out.println(store[row]);
            while (res.next()) {
                row = res.getRow();
                System.out.println(row);
                store[row] = res.getString("description");
            }
            if (row == 0) {
                store[row] = "No Statement";
            }
            System.out.println(row);
            String all = "Stanzo Bank Statement For the year:\n" + store[row];
            for (int i = 0; i < row; i++) {
                all += store[i] + "\n" + "\n";
            }
            System.out.println(all);
            text.setText(all);
                print.setEnabled(true);

            } else {
                JOptionPane.showMessageDialog(K.this, "Incorrect data !!!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());

        }

    }//GEN-LAST:event_checkActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        this.dispose();
            new Account().setVisible(true);
            try {
            res.close();
            Sobj.close();
            
        } catch (Exception e) {
//            JOptionPane.showMessageDialog(K.this, e.getMessage());
        }

    }//GEN-LAST:event_backActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
//          January(01 or 1)
        int jan = 1;
        try {
            String SQLi = "select * from descrip where identity_id=" + ids + " and month=" + jan;
            res = Sobj.executeQuery(SQLi);
            int row = 0;
            System.out.println(row);
            String[] store = new String[10];
            store[row] = "";
            // store = new String[];
            System.out.println(store[row]);
            while (res.next()) {
                row = res.getRow();
                System.out.println(row);
                store[row] = res.getString("description");
            }
            if (row == 0) {
                store[row] = "No Statement";
            }
            System.out.println(row);
            String all = "Stanzo Bank Statement For the January:\n" + store[row];
            for (int i = 0; i < row; i++) {
                all += store[i] + "\n" + "\n";
            }
            System.out.println(all);
            text.setText(all);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());

        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
//        April (04 or 4)
        int apr = 4;
        try {
            String SQLi = "select * from descrip where identity_id=" + ids + " and month=" + apr;
            res = Sobj.executeQuery(SQLi);
            int row = 0;
            System.out.println(row);
            String[] store = new String[10];
            store[row] = "";
            // store = new String[];
            System.out.println(store[row]);
            while (res.next()) {
                row = res.getRow();
                System.out.println(row);
                store[row] = res.getString("description");
            }
            if (row == 0) {
                store[row] = "No Statement";
            }
            System.out.println(row);
            String all = "Stanzo Bank Statement For the April:\n" + store[row];
            for (int i = 0; i < row; i++) {
                all += store[i] + "\n" + "\n";
            }
            System.out.println(all);
            text.setText(all);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());

        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
//       June (06 or 6)
        int jun = 6;
        try {
            String SQLi = "select * from descrip where identity_id=" + ids + " and month=" + jun;
            res = Sobj.executeQuery(SQLi);
            int row = 0;
            System.out.println(row);
            String[] store = new String[10];
            store[row] = "";
            // store = new String[];
            System.out.println(store[row]);
            while (res.next()) {
                row = res.getRow();
                System.out.println(row);
                store[row] = res.getString("description");
            }
            if (row == 0) {
                store[row] = "No Statement";
            }
            System.out.println(row);
            String all = "Stanzo Bank Statement For the June:\n" + store[row];
            for (int i = 0; i < row; i++) {
                all += store[i] + "\n" + "\n";
            }
            System.out.println(all);
            text.setText(all);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());

        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
//       August (08 or 8)
        int aug = 8;
        try {
            String SQLi = "select * from descrip where identity_id=" + ids + " and month=" + aug;
            res = Sobj.executeQuery(SQLi);
            int row = 0;
            System.out.println(row);
            String[] store = new String[10];
            store[row] = "";
            // store = new String[];
            System.out.println(store[row]);
            while (res.next()) {
                row = res.getRow();
                System.out.println(row);
                store[row] = res.getString("description");
            }
            if (row == 0) {
                store[row] = "No Statement";
            }
            System.out.println(row);
            String all = "Stanzo Bank Statement For the August:\n" + store[row];
            for (int i = 0; i < row; i++) {
                all += store[i] + "\n" + "\n";
            }
            System.out.println(all);
            text.setText(all);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());

        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        //       December (12 or 12)
        int dec = 12;
        try {
            String SQLi = "select * from descrip where identity_id=" + ids + " and month=" + dec;
            res = Sobj.executeQuery(SQLi);
            int row = 0;
            System.out.println(row);
            String[] store = new String[10];
            store[row] = "";
            // store = new String[];
            System.out.println(store[row]);
            while (res.next()) {
                row = res.getRow();
                System.out.println(row);
                store[row] = res.getString("description");
            }
            if (row == 0) {
                store[row] = "No Statement";
            }
            System.out.println(row);
            String all = "Stanzo Bank Statement For the December:\n" + store[row];
            for (int i = 0; i < row; i++) {
                all += store[i] + "\n" + "\n";
            }
            System.out.println(all);
            text.setText(all);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());

        }

    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void accnumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_accnumKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_accnumKeyTyped

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        try {
            String SQLi = "select * from descrip where identity_id=" + ids;
            res = Sobj.executeQuery(SQLi);
            int row = 0;
            System.out.println(row);
            String[] store = new String[10];
            store[row] = "";
            // store = new String[];
            System.out.println(store[row]);
            while (res.next()) {
                row = res.getRow();
                System.out.println(row);
                store[row] = res.getString("description");
            }
            if (row == 0) {
                store[row] = "No Statement";
            }
            System.out.println(row);
            String all = "Stanzo Bank Statement For the year:\n" + store[row];
            for (int i = 0; i < row; i++) {
                all += store[i] + "\n" + "\n";
            }
            System.out.println(all);
            text.setText(all);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());

        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
//        Febuary(02 or 2)
        int feb = 2;
        try {
            String SQLi = "select * from descrip where identity_id=" + ids + " and month=" + feb;
            res = Sobj.executeQuery(SQLi);
            int row = 0;
            System.out.println(row);
            String[] store = new String[10];
            store[row] = "";
            // store = new String[];
            System.out.println(store[row]);
            while (res.next()) {
                row = res.getRow();
                System.out.println(row);
                store[row] = res.getString("description");
            }
            if (row == 0) {
                store[row] = "No Statement";
            }
            System.out.println(row);
            String all = "Stanzo Bank Statement For the Febuary:\n" + store[row];
            for (int i = 0; i < row; i++) {
                all += store[i] + "\n" + "\n";
            }
            System.out.println(all);
            text.setText(all);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());

        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
//        March (03 or 3)
        int mar = 3;
        try {
            String SQLi = "select * from descrip where identity_id=" + ids + " and month=" + mar;
            res = Sobj.executeQuery(SQLi);
            int row = 0;
            System.out.println(row);
            String[] store = new String[10];
            store[row] = "";
            // store = new String[];
            System.out.println(store[row]);
            while (res.next()) {
                row = res.getRow();
                System.out.println(row);
                store[row] = res.getString("description");
            }
            if (row == 0) {
                store[row] = "No Statement";
            }
            System.out.println(row);
            String all = "Stanzo Bank Statement For the March:\n" + store[row];
            for (int i = 0; i < row; i++) {
                all += store[i] + "\n" + "\n";
            }
            System.out.println(all);
            text.setText(all);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());

        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
//    May(05 or 5)
        int may = 5;
        try {
            String SQLi = "select * from descrip where identity_id=" + ids + " and month=" + may;
            res = Sobj.executeQuery(SQLi);
            int row = 0;
            System.out.println(row);
            String[] store = new String[10];
            store[row] = "";
            // store = new String[];
            System.out.println(store[row]);
            while (res.next()) {
                row = res.getRow();
                System.out.println(row);
                store[row] = res.getString("description");
            }
            if (row == 0) {
                store[row] = "No Statement";
            }
            System.out.println(row);
            String all = "Stanzo Bank Statement For the May:\n" + store[row];
            for (int i = 0; i < row; i++) {
                all += store[i] + "\n" + "\n";
            }
            System.out.println(all);
            text.setText(all);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());

        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
//       July (07 or 7)
        int jul = 7;
        try {
            String SQLi = "select * from descrip where identity_id=" + ids + " and month=" + jul;
            res = Sobj.executeQuery(SQLi);
            int row = 0;
            System.out.println(row);
            String[] store = new String[10];
            store[row] = "";
            // store = new String[];
            System.out.println(store[row]);
            while (res.next()) {
                row = res.getRow();
                System.out.println(row);
                store[row] = res.getString("description");
            }
            if (row == 0) {
                store[row] = "No Statement";
            }
            System.out.println(row);
            String all = "Stanzo Bank Statement For the July:\n" + store[row];
            for (int i = 0; i < row; i++) {
                all += store[i] + "\n" + "\n";
            }
            System.out.println(all);
            text.setText(all);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());

        }
            }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
//       September (09 or 9)
        int sep = 9;
        try {
            String SQLi = "select * from descrip where identity_id=" + ids + " and month=" + sep;
            res = Sobj.executeQuery(SQLi);
            int row = 0;
            System.out.println(row);
            String[] store = new String[10];
            store[row] = "";
            // store = new String[];
            System.out.println(store[row]);
            while (res.next()) {
                row = res.getRow();
                System.out.println(row);
                store[row] = res.getString("description");
            }
            if (row == 0) {
                store[row] = "No Statement";
            }
            System.out.println(row);
            String all = "Stanzo Bank Statement For the September:\n" + store[row];
            for (int i = 0; i < row; i++) {
                all += store[i] + "\n" + "\n";
            }
            System.out.println(all);
            text.setText(all);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());

        }
     }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed

//       October (10 or 10)
        int oct = 10;
        try {
            String SQLi = "select * from descrip where identity_id=" + ids + " and month=" + oct;
            res = Sobj.executeQuery(SQLi);
            int row = 0;
            System.out.println(row);
            String[] store = new String[10];
            store[row] = "";
            // store = new String[];
            System.out.println(store[row]);
            while (res.next()) {
                row = res.getRow();
                System.out.println(row);
                store[row] = res.getString("description");
            }
            if (row == 0) {
                store[row] = "No Statement";
            }
            System.out.println(row);
            String all = "Stanzo Bank Statement For the October:\n" + store[row];
            for (int i = 0; i < row; i++) {
                all += store[i] + "\n" + "\n";
            }
            System.out.println(all);
            text.setText(all);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());

        }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
//       Novembew (11 or 11)
        int nov = 11;
        try {
            String SQLi = "select * from descrip where identity_id=" + ids + " and month=" + nov;
            res = Sobj.executeQuery(SQLi);
            int row = 0;
            System.out.println(row);
            String[] store = new String[10];
            store[row] = "";
            // store = new String[];
            System.out.println(store[row]);
            while (res.next()) {
                row = res.getRow();
                System.out.println(row);
                store[row] = res.getString("description");
            }
            if (row == 0) {
                store[row] = "No Statement";
            }
            System.out.println(row);
            String all = "Stanzo Bank Statement For the November:\n" + store[row];
            for (int i = 0; i < row; i++) {
                all += store[i] + "\n" + "\n";
            }
            System.out.println(all);
            text.setText(all);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(K.this, e.getMessage());

        }
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        printComponent();

    }//GEN-LAST:event_printActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(K.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(K.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(K.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(K.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new K().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Menu1;
    private javax.swing.JTextField accnum;
    private javax.swing.JPasswordField accpwd;
    private javax.swing.JButton back;
    private javax.swing.JButton check;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree jTree1;
    private javax.swing.JPanel main;
    private javax.swing.JMenuBar menu;
    private javax.swing.JPanel pp;
    private javax.swing.JButton print;
    private javax.swing.JEditorPane text;
    // End of variables declaration//GEN-END:variables
}
